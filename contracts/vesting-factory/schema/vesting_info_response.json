{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VestingInfoResponse",
  "type": "object",
  "required": [
    "claimable_amount",
    "owner_address",
    "vested_amount",
    "vesting_amount",
    "vesting_schedule"
  ],
  "properties": {
    "claimable_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "owner_address": {
      "type": "string"
    },
    "vested_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "vesting_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "vesting_schedule": {
      "$ref": "#/definitions/VestingSchedule"
    }
  },
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VestingSchedule": {
      "description": "VestingSchedule is used to vest tokens at regular intervals for a specific period. To minimize calculation error, (end_time - start_time) should be multiple of vesting_interval",
      "type": "object",
      "required": [
        "end_time",
        "start_time",
        "vesting_interval"
      ],
      "properties": {
        "end_time": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "vesting_interval": {
          "type": "string"
        }
      }
    }
  }
}
